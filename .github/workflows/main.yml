name: CI

on:
  push:
    branches: ['develop']
  pull_request:
    branches: ['*']

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup update stable && rustup default stable
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup update stable && rustup default stable
      - run: rustup component add clippy
      - run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    runs-on: ${{ matrix.os }}
    env:
      CARGO_PROFILE_DEV_DEBUG: 1
      CARGO_PROFILE_TEST_DEBUG: 1
      CARGO_INCREMENTAL: 0
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          rust: stable
          other: i686-unknown-linux-gnu
        - os: ubuntu-latest
          rust: beta
          other: i686-unknown-linux-gnu
        - os: ubuntu-latest
          rust: nightly
          other: i686-unknown-linux-gnu
        - os: macos-latest
          rust: stable
          other: x86_64-apple-ios
        #- os: windows-latest
        #  rust: stable-msvc
        #  other: i686-pc-windows-msvc
        #- os: windows-latest
        #  rust: nightly-gnu
        #  other: i686-pc-windows-gnu
    steps:
      - uses: actions/checkout@v2
      - run: rustup set profile minimal
      - run: rustup toolchain update stable --no-self-update
      - run: rustup default stable
      - run: rustup show
      - run: rustc --version --verbose
      - run: cargo --version --verbose
      - run: cargo test --color always --all

  success:
    name: action finished
    needs: [rustfmt, clippy, test]
    runs-on: ubuntu-latest
    if: "success() && github.event_name == 'push'"
    steps:
    - run: echo ok
  failure:
    name: action finished
    needs: [rustfmt, clippy, test]
    runs-on: ubuntu-latest
    if: "!success() && github.event_name == 'push'"
    steps:
    - run: exit 1
